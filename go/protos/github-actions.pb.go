// Code generated by protoc-gen-go. DO NOT EDIT.
// source: github-actions.proto

package protos

import (
	context "context"
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	grpc "google.golang.org/grpc"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type WorkflowRequest struct {
	FileContent          string   `protobuf:"bytes,1,opt,name=fileContent,proto3" json:"fileContent,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *WorkflowRequest) Reset()         { *m = WorkflowRequest{} }
func (m *WorkflowRequest) String() string { return proto.CompactTextString(m) }
func (*WorkflowRequest) ProtoMessage()    {}
func (*WorkflowRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_96487673394730d5, []int{0}
}

func (m *WorkflowRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_WorkflowRequest.Unmarshal(m, b)
}
func (m *WorkflowRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_WorkflowRequest.Marshal(b, m, deterministic)
}
func (m *WorkflowRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_WorkflowRequest.Merge(m, src)
}
func (m *WorkflowRequest) XXX_Size() int {
	return xxx_messageInfo_WorkflowRequest.Size(m)
}
func (m *WorkflowRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_WorkflowRequest.DiscardUnknown(m)
}

var xxx_messageInfo_WorkflowRequest proto.InternalMessageInfo

func (m *WorkflowRequest) GetFileContent() string {
	if m != nil {
		return m.FileContent
	}
	return ""
}

type WorkflowResponse struct {
	Actions              []*Action   `protobuf:"bytes,1,rep,name=actions,proto3" json:"actions,omitempty"`
	Workflows            []*Workflow `protobuf:"bytes,2,rep,name=workflows,proto3" json:"workflows,omitempty"`
	XXX_NoUnkeyedLiteral struct{}    `json:"-"`
	XXX_unrecognized     []byte      `json:"-"`
	XXX_sizecache        int32       `json:"-"`
}

func (m *WorkflowResponse) Reset()         { *m = WorkflowResponse{} }
func (m *WorkflowResponse) String() string { return proto.CompactTextString(m) }
func (*WorkflowResponse) ProtoMessage()    {}
func (*WorkflowResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_96487673394730d5, []int{1}
}

func (m *WorkflowResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_WorkflowResponse.Unmarshal(m, b)
}
func (m *WorkflowResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_WorkflowResponse.Marshal(b, m, deterministic)
}
func (m *WorkflowResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_WorkflowResponse.Merge(m, src)
}
func (m *WorkflowResponse) XXX_Size() int {
	return xxx_messageInfo_WorkflowResponse.Size(m)
}
func (m *WorkflowResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_WorkflowResponse.DiscardUnknown(m)
}

var xxx_messageInfo_WorkflowResponse proto.InternalMessageInfo

func (m *WorkflowResponse) GetActions() []*Action {
	if m != nil {
		return m.Actions
	}
	return nil
}

func (m *WorkflowResponse) GetWorkflows() []*Workflow {
	if m != nil {
		return m.Workflows
	}
	return nil
}

type Workflow struct {
	Identifier           string   `protobuf:"bytes,1,opt,name=Identifier,proto3" json:"Identifier,omitempty"`
	On                   string   `protobuf:"bytes,2,opt,name=On,proto3" json:"On,omitempty"`
	Resolves             []string `protobuf:"bytes,3,rep,name=Resolves,proto3" json:"Resolves,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Workflow) Reset()         { *m = Workflow{} }
func (m *Workflow) String() string { return proto.CompactTextString(m) }
func (*Workflow) ProtoMessage()    {}
func (*Workflow) Descriptor() ([]byte, []int) {
	return fileDescriptor_96487673394730d5, []int{2}
}

func (m *Workflow) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Workflow.Unmarshal(m, b)
}
func (m *Workflow) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Workflow.Marshal(b, m, deterministic)
}
func (m *Workflow) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Workflow.Merge(m, src)
}
func (m *Workflow) XXX_Size() int {
	return xxx_messageInfo_Workflow.Size(m)
}
func (m *Workflow) XXX_DiscardUnknown() {
	xxx_messageInfo_Workflow.DiscardUnknown(m)
}

var xxx_messageInfo_Workflow proto.InternalMessageInfo

func (m *Workflow) GetIdentifier() string {
	if m != nil {
		return m.Identifier
	}
	return ""
}

func (m *Workflow) GetOn() string {
	if m != nil {
		return m.On
	}
	return ""
}

func (m *Workflow) GetResolves() []string {
	if m != nil {
		return m.Resolves
	}
	return nil
}

type Action struct {
	Identifier           string            `protobuf:"bytes,1,opt,name=Identifier,proto3" json:"Identifier,omitempty"`
	Uses                 string            `protobuf:"bytes,2,opt,name=Uses,proto3" json:"Uses,omitempty"`
	Runs                 []string          `protobuf:"bytes,3,rep,name=Runs,proto3" json:"Runs,omitempty"`
	Args                 []string          `protobuf:"bytes,4,rep,name=Args,proto3" json:"Args,omitempty"`
	Needs                []string          `protobuf:"bytes,5,rep,name=Needs,proto3" json:"Needs,omitempty"`
	Env                  map[string]string `protobuf:"bytes,6,rep,name=Env,proto3" json:"Env,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	Secrets              []string          `protobuf:"bytes,7,rep,name=Secrets,proto3" json:"Secrets,omitempty"`
	XXX_NoUnkeyedLiteral struct{}          `json:"-"`
	XXX_unrecognized     []byte            `json:"-"`
	XXX_sizecache        int32             `json:"-"`
}

func (m *Action) Reset()         { *m = Action{} }
func (m *Action) String() string { return proto.CompactTextString(m) }
func (*Action) ProtoMessage()    {}
func (*Action) Descriptor() ([]byte, []int) {
	return fileDescriptor_96487673394730d5, []int{3}
}

func (m *Action) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Action.Unmarshal(m, b)
}
func (m *Action) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Action.Marshal(b, m, deterministic)
}
func (m *Action) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Action.Merge(m, src)
}
func (m *Action) XXX_Size() int {
	return xxx_messageInfo_Action.Size(m)
}
func (m *Action) XXX_DiscardUnknown() {
	xxx_messageInfo_Action.DiscardUnknown(m)
}

var xxx_messageInfo_Action proto.InternalMessageInfo

func (m *Action) GetIdentifier() string {
	if m != nil {
		return m.Identifier
	}
	return ""
}

func (m *Action) GetUses() string {
	if m != nil {
		return m.Uses
	}
	return ""
}

func (m *Action) GetRuns() []string {
	if m != nil {
		return m.Runs
	}
	return nil
}

func (m *Action) GetArgs() []string {
	if m != nil {
		return m.Args
	}
	return nil
}

func (m *Action) GetNeeds() []string {
	if m != nil {
		return m.Needs
	}
	return nil
}

func (m *Action) GetEnv() map[string]string {
	if m != nil {
		return m.Env
	}
	return nil
}

func (m *Action) GetSecrets() []string {
	if m != nil {
		return m.Secrets
	}
	return nil
}

func init() {
	proto.RegisterType((*WorkflowRequest)(nil), "protos.WorkflowRequest")
	proto.RegisterType((*WorkflowResponse)(nil), "protos.WorkflowResponse")
	proto.RegisterType((*Workflow)(nil), "protos.Workflow")
	proto.RegisterType((*Action)(nil), "protos.Action")
	proto.RegisterMapType((map[string]string)(nil), "protos.Action.EnvEntry")
}

func init() { proto.RegisterFile("github-actions.proto", fileDescriptor_96487673394730d5) }

var fileDescriptor_96487673394730d5 = []byte{
	// 354 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x84, 0x92, 0xcd, 0x6b, 0xf2, 0x40,
	0x10, 0xc6, 0xdf, 0x24, 0x7e, 0x8e, 0xe8, 0x2b, 0x8b, 0xe0, 0xe2, 0xa1, 0x84, 0x9c, 0xd2, 0x43,
	0x73, 0x50, 0x28, 0xa5, 0x37, 0x69, 0xa5, 0xf4, 0x52, 0x4b, 0x8a, 0xed, 0xd9, 0x8f, 0xd1, 0x06,
	0xc3, 0xae, 0xcd, 0x6c, 0x22, 0xfe, 0xe5, 0xbd, 0x96, 0xec, 0x26, 0x6a, 0xf1, 0xd0, 0x53, 0x66,
	0x7e, 0xfb, 0xec, 0x33, 0x93, 0x9d, 0x81, 0xde, 0x26, 0x52, 0x9f, 0xe9, 0xe2, 0x66, 0xbe, 0x54,
	0x91, 0x14, 0x14, 0xec, 0x12, 0xa9, 0x24, 0xab, 0xe9, 0x0f, 0x79, 0x23, 0xf8, 0xff, 0x21, 0x93,
	0xed, 0x3a, 0x96, 0xfb, 0x10, 0xbf, 0x52, 0x24, 0xc5, 0x5c, 0x68, 0xad, 0xa3, 0x18, 0x1f, 0xa4,
	0x50, 0x28, 0x14, 0xb7, 0x5c, 0xcb, 0x6f, 0x86, 0xe7, 0xc8, 0x8b, 0xa1, 0x7b, 0xba, 0x44, 0x3b,
	0x29, 0x08, 0x99, 0x0f, 0xf5, 0xa2, 0x02, 0xb7, 0x5c, 0xc7, 0x6f, 0x0d, 0x3b, 0xa6, 0x12, 0x05,
	0x63, 0x8d, 0xc3, 0xf2, 0x98, 0x05, 0xd0, 0xdc, 0x17, 0xb7, 0x89, 0xdb, 0x5a, 0xdb, 0x2d, 0xb5,
	0x47, 0xdb, 0x93, 0xc4, 0x7b, 0x87, 0x46, 0x89, 0xd9, 0x15, 0xc0, 0xf3, 0x0a, 0x85, 0x8a, 0xd6,
	0x11, 0x26, 0x45, 0x6b, 0x67, 0x84, 0x75, 0xc0, 0x9e, 0x0a, 0x6e, 0x6b, 0x6e, 0x4f, 0x05, 0x1b,
	0x40, 0x23, 0x44, 0x92, 0x71, 0x86, 0xc4, 0x1d, 0xd7, 0xf1, 0x9b, 0xe1, 0x31, 0xf7, 0xbe, 0x2d,
	0xa8, 0x99, 0xde, 0xfe, 0xb4, 0x65, 0x50, 0x99, 0x11, 0x52, 0x61, 0xac, 0xe3, 0x9c, 0x85, 0xa9,
	0x28, 0x6d, 0x75, 0x9c, 0xb3, 0x71, 0xb2, 0x21, 0x5e, 0x31, 0x2c, 0x8f, 0x59, 0x0f, 0xaa, 0x2f,
	0x88, 0x2b, 0xe2, 0x55, 0x0d, 0x4d, 0xc2, 0xae, 0xc1, 0x99, 0x88, 0x8c, 0xd7, 0xf4, 0xef, 0xf7,
	0x7f, 0x3f, 0x55, 0x30, 0x11, 0xd9, 0x44, 0xa8, 0xe4, 0x10, 0xe6, 0x1a, 0xc6, 0xa1, 0xfe, 0x86,
	0xcb, 0x04, 0x15, 0xf1, 0xba, 0xb6, 0x28, 0xd3, 0xc1, 0x2d, 0x34, 0x4a, 0x29, 0xeb, 0x82, 0xb3,
	0xc5, 0x43, 0xd1, 0x7b, 0x1e, 0xe6, 0x85, 0xb3, 0x79, 0x9c, 0x62, 0xd1, 0xb5, 0x49, 0xee, 0xed,
	0x3b, 0x6b, 0x38, 0x83, 0xf6, 0x93, 0x5e, 0x8a, 0x71, 0x31, 0x92, 0x47, 0x68, 0xbf, 0xce, 0x13,
	0xc2, 0xe3, 0x3b, 0xf7, 0x2f, 0x06, 0x62, 0x96, 0x63, 0xc0, 0x2f, 0x0f, 0xcc, 0x02, 0x78, 0xff,
	0x16, 0x66, 0xa7, 0x46, 0x3f, 0x01, 0x00, 0x00, 0xff, 0xff, 0x96, 0x6e, 0x0a, 0xfd, 0x72, 0x02,
	0x00, 0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// GithubActionsClient is the client API for GithubActions service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type GithubActionsClient interface {
	ParseWorkflow(ctx context.Context, in *WorkflowRequest, opts ...grpc.CallOption) (*WorkflowResponse, error)
}

type githubActionsClient struct {
	cc *grpc.ClientConn
}

func NewGithubActionsClient(cc *grpc.ClientConn) GithubActionsClient {
	return &githubActionsClient{cc}
}

func (c *githubActionsClient) ParseWorkflow(ctx context.Context, in *WorkflowRequest, opts ...grpc.CallOption) (*WorkflowResponse, error) {
	out := new(WorkflowResponse)
	err := c.cc.Invoke(ctx, "/protos.GithubActions/ParseWorkflow", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// GithubActionsServer is the server API for GithubActions service.
type GithubActionsServer interface {
	ParseWorkflow(context.Context, *WorkflowRequest) (*WorkflowResponse, error)
}

func RegisterGithubActionsServer(s *grpc.Server, srv GithubActionsServer) {
	s.RegisterService(&_GithubActions_serviceDesc, srv)
}

func _GithubActions_ParseWorkflow_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(WorkflowRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(GithubActionsServer).ParseWorkflow(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/protos.GithubActions/ParseWorkflow",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(GithubActionsServer).ParseWorkflow(ctx, req.(*WorkflowRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _GithubActions_serviceDesc = grpc.ServiceDesc{
	ServiceName: "protos.GithubActions",
	HandlerType: (*GithubActionsServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "ParseWorkflow",
			Handler:    _GithubActions_ParseWorkflow_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "github-actions.proto",
}
